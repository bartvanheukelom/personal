user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

	# use the internal Docker DNS so names of other containers can be resolved
    resolver 127.0.0.11;



	upstream backend {
		server backend:8888 max_fails=0;
	}

	server {
		listen       80;
		server_name  QQQDOMAINQQQ;
		return 301 https://$server_name$request_uri;
	}
	server {
		listen 443 ssl http2;
		server_name QQQDOMAINQQQ;

		 # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/nginx/fullchain.pem;
    ssl_certificate_key /etc/nginx/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
#Todo    ssl_dhparam /etc/nginx/dhparam2.pem;

	# modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/nginx/fullchain.pem;

	gzip                            on;
	gzip_comp_level                 3;
	gzip_proxied                    any;
	gzip_types                      text/plain text/css application/x-javascript text/xml application/xml;

		
		location / {
#			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-Host $host;
		        proxy_set_header X-Forwarded-Server $host;
		        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
		        proxy_pass http://backend;
		        client_max_body_size 100M;
		}
	}
	
}

